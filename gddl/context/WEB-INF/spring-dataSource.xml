<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!--&lt;!&ndash; 这个标签可以导入jdbc.properties,dataSource就可以动态赋值,用${value值 }表示 &ndash;&gt;
	<context:property-placeholder location="classpath:com/zhiren/gddlds/config/jdbc.properties" />

	&lt;!&ndash; 配置dataSource &ndash;&gt;
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">

	<property name="validationQuery" value="select * from dual"/>
		<property name="driverClassName">
			<value>${jdbc.driverClassName}</value>
		</property>
		<property name="url">
			<value>${jdbc.url}</value>
		</property>
		<property name="username">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		<property name="maxActive">
			<value>255</value>
		</property>
		<property name="maxIdle">
			<value>2</value>
		</property>
		<property name="maxWait">
			<value>120000</value>
		</property>
	</bean>
	<bean id="dataSource1" class="org.apache.commons.dbcp.BasicDataSource">
	<property name="validationQuery" value="select * from dual"/>
		<property name="driverClassName">
			<value>${jdbc.driverClassName1}</value>
		</property>
		<property name="url">
			<value>${jdbc.url1}</value>
		</property>
		<property name="username">
			<value>${jdbc.username1}</value>
		</property>
		<property name="password">
			<value>${jdbc.password1}</value>
		</property>
		<property name="maxActive">
			<value>255</value>
		</property>
		<property name="maxIdle">
			<value>2</value>
		</property>
		<property name="maxWait">
			<value>120000</value>
		</property>
	</bean>
	<bean id="dataSource2" class="org.apache.commons.dbcp.BasicDataSource">
	<property name="validationQuery" value="select * from dual"/>
		<property name="driverClassName">
			<value>${jdbc.driverClassName2}</value>
		</property>
		<property name="url">
			<value>${jdbc.url2}</value>
		</property>
		<property name="username">
			<value>${jdbc.username2}</value>
		</property>
		<property name="password">
			<value>${jdbc.password2}</value>
		</property>
		<property name="maxActive">
			<value>255</value>
		</property>
		<property name="maxIdle">
			<value>2</value>
		</property>
		<property name="maxWait">
			<value>120000</value>
		</property>
	</bean>
<bean id="GongysdataSource" class="org.apache.commons.dbcp.BasicDataSource">
	<property name="validationQuery" value="select * from dual"/>
		<property name="driverClassName">
			<value>${jdbc.driverClassName_gongys}</value>
		</property>
		<property name="url">
			<value>${jdbc.url_gongys}</value>
		</property>
		<property name="username">
			<value>${jdbc.username_gongys}</value>
		</property>
		<property name="password">
			<value>${jdbc.password_gongys}</value>
		</property>
		<property name="maxActive">
			<value>255</value>
		</property>
		<property name="maxIdle">
			<value>2</value>
		</property>
		<property name="maxWait">
			<value>120000</value>
		</property>
	</bean>
	&lt;!&ndash; 注入SqlSessionFactory &ndash;&gt;
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" name="cneterSqlSessionFactory">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation"
			value="classpath:com/zhiren/gddlds/config/sqlMapConfiguration.xml" />
        &lt;!&ndash; 当mybatis的xml文件和mapper接口不在相同包下时，需要用mapperLocations属性指定xml文件的路径。
         *是个通配符，代表所有的文件，**代表所有目录下 &ndash;&gt;
        <property name="mapperLocations" value="classpath:com/zhiren/gddlds/dao/map/**/*.xml"/>
	</bean>
	&lt;!&ndash; 注入SqlSessionFactory &ndash;&gt;
	<bean id="sqlSessionFactory1" class="org.mybatis.spring.SqlSessionFactoryBean" name="uploadSqlSessionFactory">
		<property name="dataSource" ref="dataSource1" />
		<property name="configLocation"
			value="classpath:com/zhiren/gddlds/config/sqlMapConfiguration1.xml" />
	</bean>
	&lt;!&ndash; 注入SqlSessionFactory &ndash;&gt;
	<bean id="sqlSessionFactory2" class="org.mybatis.spring.SqlSessionFactoryBean" name="cneterSqlSessionFactory2">
		<property name="dataSource" ref="dataSource2" />
		<property name="configLocation"
			value="classpath:com/zhiren/gddlds/config/sqlMapConfiguration2.xml" />
	</bean>

	&lt;!&ndash; 注入SqlSession &ndash;&gt;
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	&lt;!&ndash; jdbcTemplate &ndash;&gt;
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />

	</bean>
	&lt;!&ndash; jdbcTemplate &ndash;&gt;
	<bean id="jdbcTemplate1" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource1" />
	</bean>
	&lt;!&ndash; jdbcTemplate &ndash;&gt;
	<bean id="jdbcTemplate2" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource2" />
	</bean>
		&lt;!&ndash; jdbcTemplate &ndash;&gt;
	<bean id="jdbcTemplateGongys" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="GongysdataSource" />
	</bean>-->


</beans>